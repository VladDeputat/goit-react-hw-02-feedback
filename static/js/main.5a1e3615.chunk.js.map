{"version":3,"sources":["components/Notification/Notification.module.scss","components/Statistics/Statistics.module.scss","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/Section/Section.module.scss","components/FeedbackOptions/FeedbackOptions.module.scss"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","stat","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","btn","Section","title","children","container","heading","Notification","message","App","state","setState","prevState","this","result","Math","round","countTotalFeedback","Object","keys","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,gC,uCCA5BD,EAAOC,QAAU,CAAC,KAAO,2B,qJCYVC,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qCACE,oBAAGC,UAAWC,IAAOC,KAArB,mBAAkCP,KAClC,oBAAGK,UAAWC,IAAOC,KAArB,sBAAqCN,KACrC,oBAAGI,UAAWC,IAAOC,KAArB,kBAAiCL,KACjC,oBAAGG,UAAWC,IAAOC,KAArB,oBAAmCJ,KACnC,oBAAGE,UAAWC,IAAOC,KAArB,gCAA+CH,S,gBCMpCI,EAZS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtBD,EAAQE,KAAI,SAAAC,GAAM,OAChB,wBAEEC,KAAK,SACLC,QAAS,kBAAMJ,EAAgBE,IAC/BP,UAAWC,IAAOS,IAJpB,SAMGH,GALIA,O,gBCIII,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,sBAAKb,UAAWC,IAAOa,UAAvB,UACE,oBAAId,UAAWC,IAAOc,QAAtB,SAAgCH,IAC/BC,M,iBCCUG,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGjB,UAAWC,IAAOgB,QAArB,SAA+BA,KC0DlBC,E,4MAvDbC,MAAQ,CACNxB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,gBAAkB,SAAAE,GAChB,EAAKa,UAAS,SAAAC,GAAS,sBAAQd,EAASc,EAAUd,GAAU,O,wDAG9D,WACE,OAAOe,KAAKH,MAAMxB,KAAO2B,KAAKH,MAAMvB,QAAU0B,KAAKH,MAAMtB,M,6CAG3D,WACE,IAAM0B,EAASC,KAAKC,MACjB,IAAMH,KAAKI,qBAAwBJ,KAAKH,MAAMxB,MAEjD,OAAQ2B,KAAKI,qBAAuBH,EAAS,GAAK,M,oBAGpD,WACE,OACE,qCACE,cAAC,EAAD,CACEX,MAAO,6BACPC,SACE,cAAC,EAAD,CACET,QAASuB,OAAOC,KAAKN,KAAKH,OAC1Bd,gBAAiBiB,KAAKjB,oBAK5B,cAAC,EAAD,CACEO,MAAO,aACPC,SACES,KAAKI,qBAAuB,EAC1B,cAAC,EAAD,CAAcT,QAAS,sBAEvB,cAAC,EAAD,CACEtB,KAAM2B,KAAKH,MAAMxB,KACjBC,QAAS0B,KAAKH,MAAMvB,QACpBC,IAAKyB,KAAKH,MAAMtB,IAChBC,MAAOwB,KAAKI,qBACZ3B,mBAAoBuB,KAAKO,6C,GA9CvBC,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B3C,EAAOC,QAAU,CAAC,UAAY,2BAA2B,QAAU,2B,kBCAnED,EAAOC,QAAU,CAAC,IAAM,gC","file":"static/js/main.5a1e3615.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1eWlY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stat\":\"Statistics_stat__api04\"};","import styles from './Statistics.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    <p className={styles.stat}>Good: {good}</p>\r\n    <p className={styles.stat}>Neutral: {neutral}</p>\r\n    <p className={styles.stat}>Bad: {bad}</p>\r\n    <p className={styles.stat}>Total: {total}</p>\r\n    <p className={styles.stat}>Positive feedback: {positivePercentage}</p>\r\n  </>\r\n);\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.string.isRequired,\r\n};\r\n","import styles from './FeedbackOptions.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) =>\r\n  options.map(option => (\r\n    <button\r\n      key={option}\r\n      type=\"button\"\r\n      onClick={() => onLeaveFeedback(option)}\r\n      className={styles.btn}\r\n    >\r\n      {option}\r\n    </button>\r\n  ));\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import styles from './Section.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div className={styles.container}>\r\n    <h1 className={styles.heading}>{title}</h1>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.object.isRequired,\r\n};\r\n","import styles from './Notification.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={styles.message}>{message}</p>\r\n);\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import { Component } from 'react';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = option => {\n    this.setState(prevState => ({ [option]: prevState[option] + 1 }));\n  };\n\n  countTotalFeedback() {\n    return this.state.good + this.state.neutral + this.state.bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const result = Math.round(\n      (100 / this.countTotalFeedback()) * this.state.good,\n    );\n    return (this.countTotalFeedback() ? result : 0) + '%';\n  }\n\n  render() {\n    return (\n      <>\n        <Section\n          title={'Please leave your feedback'}\n          children={\n            <FeedbackOptions\n              options={Object.keys(this.state)}\n              onLeaveFeedback={this.onLeaveFeedback}\n            />\n          }\n        />\n\n        <Section\n          title={'Statistics'}\n          children={\n            this.countTotalFeedback() < 1 ? (\n              <Notification message={'No feedback given'} />\n            ) : (\n              <Statistics\n                good={this.state.good}\n                neutral={this.state.neutral}\n                bad={this.state.bad}\n                total={this.countTotalFeedback()}\n                positivePercentage={this.countPositiveFeedbackPercentage()}\n              />\n            )\n          }\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__1hXUG\",\"heading\":\"Section_heading__1LnVN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1jiuA\"};"],"sourceRoot":""}